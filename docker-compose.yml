version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - main_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - main_network

  mongouser:
    image: mongo
    container_name: mongo_user
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongo_user_data:/data/db
    networks:
      - main_network

  mongojob:
    image: mongo
    container_name: mongo_job
    restart: always
    expose:
      - "27017"
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongo_job_data:/data/db
    networks:
      - main_network

  mongoapplication:
    image: mongo
    container_name: mongo_application
    restart: always
    expose:
      - "27017"
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongo_application_data:/data/db
    networks:
      - main_network

  mongonotification:
    image: mongo
    container_name: mongo_notification
    restart: always
    expose:
      - "27027"
    ports:
      - "27020:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongo_notification_data:/data/db
    networks:
      - main_network

  userservice:
    build: ./backend/userService
    container_name: user-service
    ports:
      - "8080:8080"
    depends_on:
      - mongouser 
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password123@mongouser:27017/myDatabase?authSource=admin
    networks:
      - main_network

  jobservice:
    build: ./backend/jobService
    container_name: job-service
    ports:
      - "8081:8081"
    depends_on:
      - mongojob
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password123@mongojob:27017/myDatabase?authSource=admin
      - USER_SERVICE_HOST=userservice
    networks:
      - main_network

  applicationservice:
    build: ./backend/applicationService
    container_name: application-service
    ports:
      - "8082:8082"
    depends_on:
      - mongoapplication
      - kafka
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password123@mongoapplication:27017/myDatabase?authSource=admin
      - SPRING_KAFKA_HOST=kafka:9092
    networks:
      - main_network

  notificationservice:
    build: ./backend/notificationService
    container_name: notification-service
    ports:
      - "8083:8083"
    depends_on:
      - mongonotification
      - kafka
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password123@mongonotification:27017/myDatabase?authSource=admin
      - SPRING_KAFKA_HOST=kafka:9092
    networks:
      - main_network

networks:
  main_network:
    driver: bridge

volumes:
  mongo_user_data:
  mongo_job_data:
  mongo_application_data:
  mongo_notification_data:
